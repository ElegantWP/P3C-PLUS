<?xml version="1.0" encoding="UTF-8"?>
<test-data xmlns="http://pmd.sourceforge.net/rule-tests"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests https://pmd.sourceforge.io/rule-tests_1_0_0.xsd">

  <code-fragment id="测试样例">
    <![CDATA[

    package com.yonyou.einvoice.serviceincometax.controller;

import com.yonyou.einvoice.common.response.CommonResponse;
import com.yonyou.einvoice.common.response.CommonResponse2;
import com.yonyou.einvoice.common.response.ICommonResponse;
import com.yonyou.einvoice.common.response.ICommonResponse2;
import com.yonyou.einvoice.common.response.TotalCommonResponse;
import com.yonyou.einvoice.common.util.BusiExceptionUtils;
import com.yonyou.einvoice.serviceincometax.dto.AccountingItemRequest;
import com.yonyou.einvoice.serviceincometax.dto.AccountingItemResponse;
import com.yonyou.einvoice.serviceincometax.entity.AccountingItem;
import com.yonyou.einvoice.serviceincometax.entity.FinaceReportSetting;
import com.yonyou.einvoice.serviceincometax.enums.MatchRelationEnum;
import com.yonyou.einvoice.serviceincometax.service.AccountingItemService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import java.util.List;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Controller;
import org.springframework.util.CollectionUtils;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 科目设置Controller
 */
@Controller
@RequestMapping("/item")
@Api(value = "科目设置", tags = {"科目设置"})
public class AccountingItemController {

  /**
   * @Description: 取消对应
   * @author jinggq
   * @date: 2018/7/19
   */
  @ApiOperation("取消对应")
  @ApiResponse(code = 200, message = "返回结果")
  @ResponseBody
  @RequestMapping(value = "/delete-match", method = RequestMethod.PUT)
  @PutMapping(value = "/put-match")
  public ICommonResponse2<String> deleteMatch(@RequestBody AccountingItemRequest accountingItemRequest) {

    if (StringUtils.isEmpty(accountingItemRequest.getNsrsbh())) {
      return new CommonResponse2(ICommonResponse.DATA_INVALID, "纳税人识别号不能为空");
    }
    if (CollectionUtils.isEmpty(accountingItemRequest.getCodes())) {
      return new CommonResponse2(ICommonResponse.DATA_INVALID, "应用科目编码不能为空");
    }

    try {
      accountingItemService
          .deleteMatch(accountingItemRequest);
      return new CommonResponse2(ICommonResponse.SUCCESS_CODE, "操作成功");
    } catch (Exception e) {
      return BusiExceptionUtils.responseException2(e, "取消对应出现异常");
    }
  }


}

        ]]>
  </code-fragment>
  <!--没有对 方法参数签名为空进行判断-->
  <test-code>
    <!-- 预期问题个数 -->
    <description>URIRequestRule</description>
    <expected-problems>0</expected-problems>
    <code-ref id="测试样例" />
  </test-code>
</test-data>